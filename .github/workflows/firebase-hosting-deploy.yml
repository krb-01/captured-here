name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main # 'main' ブランチへのプッシュ時に実行 (または 'master' など)
  # pull_request セクションを削除

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest # 実行環境
    env: # ★ 環境変数を設定
      # クライアントサイドFirebase SDK用 (もし .env.local をリポジトリに含めない場合)
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
      # Firebase Admin SDK用
      GOOGLE_APPLICATION_CREDENTIALS_JSON_STRING: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON_STRING }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # リポジトリをチェックアウト

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # package.jsonのengines.nodeと合わせる
          cache: 'npm' # または 'yarn'

      - name: Install dependencies
        run: npm ci # npm install --frozen-lockfile と同じ、より安全

      - name: Build Next.js application
        run: npm run build # Next.jsアプリをビルド (outディレクトリが生成される)

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting --token "${{ secrets.FIREBASE_TOKEN }}" --project krbapps --force
        # --project krbapps は .firebaserc で default が設定されていれば不要な場合もあるが、明示的に指定
        # --force は非対話モードでデプロイを強制するために必要になることがある
